name: Pull Request

on: [pull_request]

jobs:
  build_wheels:
    name: PR - cp*, ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}-${{ matrix.version }}
    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu, macos]
        version: [latest]
    env:
      GITHUB_TOKEN: ${{ github.token }}
      ARTIFACT_WORKFLOW: osrm-backend.yml

    steps:
    - name: Checkout Project
      uses: actions/checkout@v3

    - name: Get osrm-backend Artifact ID
      if: matrix.platform == 'macos'
      shell: bash
      run: |
        echo ARTIFACT_ID=$( \
          gh api -X GET \
          repos/${{ github.repository }}/actions/workflows/${{ env.ARTIFACT_WORKFLOW }}/runs \
          --field status='success' \
          --field per_page=1 \
          | jq '.["workflow_runs"][0].id') \
        >> $GITHUB_ENV

    - name: Run CIBuildWheel
      uses: pypa/cibuildwheel@v2.14.1
      env:
        CIBW_BUILD_VERBOSITY: 1

        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: "pytest {project}/tests"
        CIBW_BEFORE_TEST: osrm-datastore {package}/tests/test_data/ch/monaco

        CIBW_ARCHS: native
        CIBW_BUILD: cp38*
        CIBW_SKIP: "*musllinux*"
        
        CIBW_MANYLINUX_X86_64_IMAGE: ghcr.io/gis-ops/manylinux:2_28_osrm_python
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/intel64/gcc4.8/ auditwheel repair -w {dest_dir} {wheel}"

        CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET="10.14"
        CIBW_BEFORE_ALL_MACOS: |
          gh run download ${{ env.ARTIFACT_ID }} -n osrm-backend
          tar -zxf osrm-backend.tgz
          cd osrm-backend/build

          export HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_CLEANUP=1
          brew install lua tbb boost@1.76
          brew link boost@1.76
          
          make install
